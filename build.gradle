plugins {
    id 'fabric-loom' version '1.1-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.
    mavenCentral()
    repositories {
        maven { url = 'https://maven.nucleoid.xyz/' }
        maven { url = "https://jitpack.io" }
    }
    maven {
        name = "Fuzs Mod Resources"
        url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/"
    }
    maven { url = "https://cursemaven.com" }
    maven { url = "https://mvn.devos.one/snapshots/" }
    maven { url = "https://repo.ajcool.space/snapshots" }
    maven { url = "https://api.modrinth.com/maven" }

    maven { url = "https://maven.jamieswhiteshirt.com/libs-release" }
    maven { url = "https://maven.tterrag.com/" } // Flywheel
    maven { url = "https://jitpack.io/" }
    flatDir {
        dirs 'libs'
    }

}

loom {
    accessWidenerPath = file("src/main/resources/ardastuff.accesswidener")
}


dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation("curse.maven:worldedit-225608:4586218")
    include(implementation(annotationProcessor("io.github.llamalad7:mixinextras-fabric:0.4.1")))
    //modImplementation ("com/fastasyncworldedit:FastAsyncWorldEdit-Fabric:2.6.0-SNAPSHOT")
    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation("com.simibubi.create:create-fabric-${minecraft_version}:${create_version}")
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    //modImplementation("io.github.fabricators_of_create.Porting-Lib:porting-lib:2.3.4+1.20.1")
    modImplementation("fuzs.forgeconfigapiport:forgeconfigapiport-fabric:8.0.0")
    modImplementation("maven.modrinth:porting_lib:GWCykcY1")
    compileOnly("net.luckperms:api:5.4")
    modLocalRuntime("maven.modrinth:lazydfu:${lazydfu_version}")
    modImplementation (include('org.json:json:20220924'))
    modImplementation 'xyz.nucleoid:stimuli:0.4.7+1.20.1'
    //modImplementation("name:PocketDimensionPlots-Fabric-1.19.2-0.1.0")
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
